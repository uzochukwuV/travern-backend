### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Category {
  id: Int!
  img: String
  name: String
  products: [Product]
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  category_create(img: String!, name: String!): Category!
  category_delete(id: Int!): Category!
  category_update(id: Int!, img: String!, name: String!): Category!
  order_create(customer: Int, product: String): Order!
  order_delete(id: String!): Order!
  order_update(customer: Int, id: String!, product: String): Order!
  product_create(category: [Int], description: String!, img: String!, name: String!, quantity: Int!, shop: String!): Product!
  product_delete(id: String!): Product!
  product_update(category: [Int], description: String, id: String!, img: String, name: String, quantity: Int): Product!
  shop_create(logo: String!, motto: String!, name: String!, openHrs: String!, owner: Int!): Shop!
  shop_delete(id: String!): Shop!
  user_create(address: String!, createdAt: String!, email: String!, firstName: String!, lastName: String!, phoneNumber: String!, updatedAt: String!): User!
  user_delete(id: Int!): User!
  user_update(address: String!, createdAt: String!, email: String!, firstName: String!, id: Int!, lastName: String!, phoneNumber: String!, updatedAt: String!): User!
}

type Order {
  customer: User
  id: String!
  products: [Product]
  updatedAt: DateTime
}

type Product {
  categories: [Category]
  description: String
  id: String!
  img: String
  name: String
  orders: [Order]
  quantity: Int
  shop: Shop
  updatedAt: DateTime
}

type Query {
  categories: [Category!]!
  category(id: ID!): Category!
  order(id: ID!): Order!
  orders: [Order!]!
  product(id: ID!): Product!
  products(filter: String, skip: Int, take: Int): [Product!]!
  shop(id: ID!): Shop!
  shops: [Shop!]!
  user(id: ID!): User!
  users: [User!]!
}

type Shop {
  createdAt: String!
  id: String!
  logo: String!
  motto: String!
  name: String!
  openHrs: String!
  owner: User!
  products: [Product]!
  verified: Boolean
}

type User {
  address: String
  createdAt: DateTime
  email: String
  firstName: String
  id: Int!
  lastName: String
  orders: [String]
  phoneNumber: String
  picture: String
  shop: Shop
  updatedAt: DateTime
}