/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./src/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Category: { // root type
    id: number; // Int!
    img?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Mutation: {};
  Order: { // root type
    id: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Product: { // root type
    description?: string | null; // String
    id: string; // String!
    img?: string | null; // String
    name?: string | null; // String
    quantity?: number | null; // Int
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Query: {};
  Shop: { // root type
    createdAt: string; // String!
    id: string; // String!
    logo: string; // String!
    motto: string; // String!
    name: string; // String!
    openHrs: string; // String!
    verified?: boolean | null; // Boolean
  }
  User: { // root type
    address?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email?: string | null; // String
    firstName?: string | null; // String
    id: number; // Int!
    lastName?: string | null; // String
    phoneNumber?: string | null; // String
    picture?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Category: { // field return type
    id: number; // Int!
    img: string | null; // String
    name: string | null; // String
    products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Mutation: { // field return type
    category_create: NexusGenRootTypes['Category']; // Category!
    category_delete: NexusGenRootTypes['Category']; // Category!
    category_update: NexusGenRootTypes['Category']; // Category!
    order_create: NexusGenRootTypes['Order']; // Order!
    order_delete: NexusGenRootTypes['Order']; // Order!
    order_update: NexusGenRootTypes['Order']; // Order!
    product_create: NexusGenRootTypes['Product']; // Product!
    product_delete: NexusGenRootTypes['Product']; // Product!
    product_update: NexusGenRootTypes['Product']; // Product!
    shop_create: NexusGenRootTypes['Shop']; // Shop!
    shop_delete: NexusGenRootTypes['Shop']; // Shop!
    user_create: NexusGenRootTypes['User']; // User!
    user_delete: NexusGenRootTypes['User']; // User!
    user_update: NexusGenRootTypes['User']; // User!
  }
  Order: { // field return type
    customer: NexusGenRootTypes['User'] | null; // User
    id: string; // String!
    products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Product: { // field return type
    categories: Array<NexusGenRootTypes['Category'] | null> | null; // [Category]
    description: string | null; // String
    id: string; // String!
    img: string | null; // String
    name: string | null; // String
    orders: Array<NexusGenRootTypes['Order'] | null> | null; // [Order]
    quantity: number | null; // Int
    shop: NexusGenRootTypes['Shop'] | null; // Shop
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Query: { // field return type
    categories: NexusGenRootTypes['Category'][]; // [Category!]!
    category: NexusGenRootTypes['Category']; // Category!
    order: NexusGenRootTypes['Order']; // Order!
    orders: NexusGenRootTypes['Order'][]; // [Order!]!
    product: NexusGenRootTypes['Product']; // Product!
    products: NexusGenRootTypes['Product'][]; // [Product!]!
    shop: NexusGenRootTypes['Shop']; // Shop!
    shops: NexusGenRootTypes['Shop'][]; // [Shop!]!
    user: NexusGenRootTypes['User']; // User!
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  Shop: { // field return type
    createdAt: string; // String!
    id: string; // String!
    logo: string; // String!
    motto: string; // String!
    name: string; // String!
    openHrs: string; // String!
    owner: NexusGenRootTypes['User']; // User!
    products: Array<NexusGenRootTypes['Product'] | null>; // [Product]!
    verified: boolean | null; // Boolean
  }
  User: { // field return type
    address: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string | null; // String
    firstName: string | null; // String
    id: number; // Int!
    lastName: string | null; // String
    orders: Array<string | null> | null; // [String]
    phoneNumber: string | null; // String
    picture: string | null; // String
    shop: NexusGenRootTypes['Shop'] | null; // Shop
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenFieldTypeNames {
  Category: { // field return type name
    id: 'Int'
    img: 'String'
    name: 'String'
    products: 'Product'
    updatedAt: 'DateTime'
  }
  Mutation: { // field return type name
    category_create: 'Category'
    category_delete: 'Category'
    category_update: 'Category'
    order_create: 'Order'
    order_delete: 'Order'
    order_update: 'Order'
    product_create: 'Product'
    product_delete: 'Product'
    product_update: 'Product'
    shop_create: 'Shop'
    shop_delete: 'Shop'
    user_create: 'User'
    user_delete: 'User'
    user_update: 'User'
  }
  Order: { // field return type name
    customer: 'User'
    id: 'String'
    products: 'Product'
    updatedAt: 'DateTime'
  }
  Product: { // field return type name
    categories: 'Category'
    description: 'String'
    id: 'String'
    img: 'String'
    name: 'String'
    orders: 'Order'
    quantity: 'Int'
    shop: 'Shop'
    updatedAt: 'DateTime'
  }
  Query: { // field return type name
    categories: 'Category'
    category: 'Category'
    order: 'Order'
    orders: 'Order'
    product: 'Product'
    products: 'Product'
    shop: 'Shop'
    shops: 'Shop'
    user: 'User'
    users: 'User'
  }
  Shop: { // field return type name
    createdAt: 'String'
    id: 'String'
    logo: 'String'
    motto: 'String'
    name: 'String'
    openHrs: 'String'
    owner: 'User'
    products: 'Product'
    verified: 'Boolean'
  }
  User: { // field return type name
    address: 'String'
    createdAt: 'DateTime'
    email: 'String'
    firstName: 'String'
    id: 'Int'
    lastName: 'String'
    orders: 'String'
    phoneNumber: 'String'
    picture: 'String'
    shop: 'Shop'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    category_create: { // args
      img: string; // String!
      name: string; // String!
    }
    category_delete: { // args
      id: number; // Int!
    }
    category_update: { // args
      id: number; // Int!
      img: string; // String!
      name: string; // String!
    }
    order_create: { // args
      customer?: number | null; // Int
      product?: string | null; // String
    }
    order_delete: { // args
      id: string; // String!
    }
    order_update: { // args
      customer?: number | null; // Int
      id: string; // String!
      product?: string | null; // String
    }
    product_create: { // args
      category?: Array<number | null> | null; // [Int]
      description: string; // String!
      img: string; // String!
      name: string; // String!
      quantity: number; // Int!
      shop: string; // String!
    }
    product_delete: { // args
      id: string; // String!
    }
    product_update: { // args
      category?: Array<number | null> | null; // [Int]
      description?: string | null; // String
      id: string; // String!
      img?: string | null; // String
      name?: string | null; // String
      quantity?: number | null; // Int
    }
    shop_create: { // args
      logo: string; // String!
      motto: string; // String!
      name: string; // String!
      openHrs: string; // String!
      owner: number; // Int!
    }
    shop_delete: { // args
      id: string; // String!
    }
    user_create: { // args
      address: string; // String!
      createdAt: string; // String!
      email: string; // String!
      firstName: string; // String!
      lastName: string; // String!
      phoneNumber: string; // String!
      updatedAt: string; // String!
    }
    user_delete: { // args
      id: number; // Int!
    }
    user_update: { // args
      address: string; // String!
      createdAt: string; // String!
      email: string; // String!
      firstName: string; // String!
      id: number; // Int!
      lastName: string; // String!
      phoneNumber: string; // String!
      updatedAt: string; // String!
    }
  }
  Query: {
    category: { // args
      id: string; // ID!
    }
    order: { // args
      id: string; // ID!
    }
    product: { // args
      id: string; // ID!
    }
    products: { // args
      filter?: string | null; // String
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    shop: { // args
      id: string; // ID!
    }
    user: { // args
      id: string; // ID!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}